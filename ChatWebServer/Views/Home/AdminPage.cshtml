@model List<ChatWebServer.Models.User>

@{
    ViewData["Title"] = "Admin Page";
}

<div class="text-center">
    <button type="button" class="btn" id="openAdminModalBtn">Do Admin Stuff</button>
    <div class="chat-container" id="msgs">
        <!-- Messages will be dynamically added here -->
    </div>

    <div id="inputBox">
        <input type="text" id="messageField" placeholder="Type a message and press Enter" />
    </div>

    <!-- Dialog for CRUD operations on User table -->
    <dialog id="manageUsersDialog">
        <div id="userList">
            @foreach (var user in Model)
            {
                <div class="user-box" onclick="expandUser(this)">
                    <p>@user.Username</p>
                    <div class="user-info" style="display: none;">
                        <p>ID: @user.UserID</p>
                        <p>Role: @user.Role</p>
                        <p>Active: @user.IsActive</p>
                        <button class="btn btn-primary" onclick="openUpdateUserDialog('@user.UserID', '@user.Username', '@user.Role')">Update</button>
                    </div>
                </div>
            }
        </div>
        <button class="btn btn-primary" onclick="openAddUserDialog()">Add User</button>
        <form method="dialog" id="addUserForm" style="display:none">
            <h4>Add User</h4>
            <div class="form-group">
                <label for="username">Username</label>
                <input type="text" class="form-control" id="username" placeholder="Enter username">
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <input type="password" class="form-control" id="password" placeholder="Enter password">
            </div>
            <div class="form-group">
                <label for="role">Role</label>
                <select class="form-control" id="role">
                    <option value="ADMIN">ADMIN</option>
                    <option value="USER">USER</option>
                </select>
            </div>
            <button type="button" class="btn btn-primary" onclick="addUser()">Save</button>
            <button type="button" class="btn btn-secondary" onclick="closeAddUserDialog()">Cancel</button>
        </form>
        <form method="dialog" id="updateUserForm" style="display:none">
            <h4>Update User</h4>
            <input type="hidden" id="updateUserID">
            <div class="form-group">
                <label for="updateUsername">Username</label>
                <input type="text" class="form-control" id="updateUsername" placeholder="Enter username">
            </div>
            <div class="form-group">
                <label for="updateRole">Role</label>
                <select class="form-control" id="updateRole">
                    <option value="ADMIN">ADMIN</option>
                    <option value="USER">USER</option>
                </select>
            </div>
            <button type="button" class="btn btn-primary" onclick="updateUser()">Update</button>
            <button type="button" class="btn btn-danger" onclick="deleteUser()">Delete</button>
            <button type="button" class="btn btn-secondary" onclick="closeUpdateUserDialog()">Cancel</button>
        </form>
        <button class="btn btn-secondary" onclick="closeManageUsersDialog()">Close</button>
    </dialog>
</div>


<script>
    var userName = @Json.Serialize(Context.User.Identity.Name);

    const showButton = document.getElementById("openAdminModalBtn");
    const favDialog = document.getElementById("manageUsersDialog");

    showButton.addEventListener("click", () => {
        favDialog.showModal();
    });

    function closeManageUsersDialog() {
        document.getElementById("manageUsersDialog").close();
    }

    function expandUser(userBox) {
        const userInfo = userBox.querySelector(".user-info");
        userInfo.style.display = userInfo.style.display === "none" ? "block" : "none";
    }

    function openAddUserDialog() {
        document.getElementById("addUserForm").style.display = "block";
    }

    function closeAddUserDialog() {
        document.getElementById("addUserForm").style.display = "none";
    }

    function addUser() {
        const username = document.getElementById("username").value;
        const password = document.getElementById("password").value;
        const role = document.getElementById("role").value;

        // Perform an AJAX request to add the user in the backend
        fetch("/Home/AddUser", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                Username: username,
                Password: password,
                Role: role,
            }),
        })
            .then(response => response.json())
            .then(data => {
                // Refresh the page after adding the user
                window.location.reload();
            })
            .catch(error => {
                console.error("Error adding user:", error);
            });
    }

    function openUpdateUserDialog(userID, username, role) {
        document.getElementById("updateUserID").value = userID;
        document.getElementById("updateUsername").value = username;
        document.getElementById("updateRole").value = role;
        document.getElementById("updateUserForm").style.display = "block";
    }

    function closeUpdateUserDialog() {
        document.getElementById("updateUserForm").style.display = "none";
    }

    function updateUser() {
        const userID = document.getElementById("updateUserID").value;
        const username = document.getElementById("updateUsername").value;
        const role = document.getElementById("updateRole").value;

        // Perform an AJAX request to update the user in the backend
        fetch(`/Home/UpdateUser/${userID}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({
                Username: username,
                Role: role,
            }),
        })
            .then(response => response.json())
            .then(data => {
                // Refresh the page after updating the user
                window.location.reload();
            })
            .catch(error => {
                console.error("Error updating user:", error);
            });
    }

    function deleteUser() {
        const userID = document.getElementById("updateUserID").value;

        // Perform an AJAX request to delete the user in the backend
        fetch(`/Home/DeleteUser/${userID}`, {
            method: "POST",
        })
            .then(response => response.json())
            .then(data => {
                // Refresh the page after deleting the user
                window.location.reload();
            })
            .catch(error => {
                console.error("Error deleting user:", error);
            });
    }
</script>
